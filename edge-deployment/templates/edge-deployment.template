{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a new VPC and deploys WordPress. **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1ot302h77)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "ALBAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Linux Bastion Configuration"
                    },
                    "Parameters": [
                        "BastionInstanceType",
                        "BastionAMIOS",
                        "RemoteAccessCIDR",
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon RDS (Aurora) Configuration"
                    },
                    "Parameters": [
                        "DBAutoMinorVersionUpgrade",
                        "DBBackupRetentionPeriod",
                        "DBPreferredBackupWindow",
                        "DBStorageEncrypted",
                        "DBInstanceClass",
                        "DBMasterUserPassword",
                        "DBMultiAZ"
                    ]
                },
                {
                    "Label": {
                        "default": "DNS and SSL Configuration"
                    },
                    "Parameters": [
                        "DomainName",
                        "HostedZoneID",
                        "UseSSL",
                        "CertificateArn"
                    ]
                },
                {
                    "Label": {
                        "default": "WordPress Webserver Configuration"
                    },
                    "Parameters": [
                        "WordpressAdminPassword",
                        "WebServerInstanceType",
                        "WebServerAMI",
                        "WebServerInstanceMonitoring",
                        "WebServerMinSize",
                        "WebServerMaxSize",
                        "WebServerDesiredCapacity",
                        "AutoScalingNotificationEmail"
                    ]
                },
                {
                    "Label": {
                        "default": "DVWA Configuration"
                    },
                    "Parameters": [
                        "DVWAInstanceType",
                        "DVWARemoteAccessCIDR",
                        "DVWAKeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "ElastiCache Configuration"
                    },
                    "Parameters": [
                        "ElastiCacheEnable",
                        "ElastiCacheAutoMinorVersionUpgrade",
                        "ElastiCacheNodeType",
                        "ElastiCacheNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix",
                        "QSS3BucketRegion"
                    ]
                }
            ],
            "ParameterLabels": {
                "AutoScalingNotificationEmail": {
                    "default": "Autoscaling Notification Email"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "BastionAMIOS": {
                    "default": "Bastion AMI OS"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "DVWAInstanceType": {
                    "default": "DVWA Instance Type"
                },
                "DBAutoMinorVersionUpgrade": {
                    "default": "Enable Auto Minor Version Upgrade"
                },
                "DBBackupRetentionPeriod": {
                    "default": "Backup Retention Period"
                },
                "DBPreferredBackupWindow": {
                    "default": "Preferred Backup Window"
                },
                "DBStorageEncrypted": {
                    "default": "Enable Storage Encryption"
                },
                "DBInstanceClass": {
                    "default": "Database Instance Size"
                },
                "DBMasterUserPassword": {
                    "default": "Database Admin Password"
                },
                "DBMultiAZ": {
                    "default": "Multi-AZ Database"
                },
                "WordpressAdminPassword": {
                    "default": "Admin Password"
                },
                "KeyPairName": {
                    "default": "SSH KeyPair Name"
                },
                "DVWAKeyPairName": {
                    "default": "DVWA SSH KeyPair Name"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "ALBAccessCIDR": {
                    "default": "Allowed CIDR for ALB Access"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "DVWARemoteAccessCIDR": {
                    "default": "Allowed DVWA External Access CIDR"
                },
                "DomainName": {
                    "default": "Domain Name"
                },
                "UseSSL": {
                    "default": "Use SSL"
                },
                "CertificateArn": {
                    "default": "SSL certificate ARN"
                },
                "HostedZoneID": {
                    "default": "Route 53 Hosted Zone ID"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "WebServerDesiredCapacity": {
                    "default": "Desired Number of Instances"
                },
                "WebServerInstanceType": {
                    "default": "Instance Size"
                },
                "WebServerAMI": {
                    "default": "AMI to use for WordPress Instances"
                },
                "WebServerInstanceMonitoring": {
                    "default": "Instance enhanced monitoring"
                },
                "WebServerMaxSize": {
                    "default": "Max Number of Instances"
                },
                "WebServerMinSize": {
                    "default": "Min Number of Instances"
                },
                "ElastiCacheEnable":{
                    "default": "Enable ElastiCache"
                },
                "ElastiCacheAutoMinorVersionUpgrade":{
                    "default": "Enable ElastiCache Auto Minor Version Upgrade"
                },
                "ElastiCacheNodeType":{
                    "default": "ElastiCache Node Type"
                },
                "ElastiCacheNumberOfNodes":{
                    "default": "Number of ElastiCache Nodes"
                },
                "QSS3BucketRegion":{
                  "default":"Quick Start S3 bucket region"
                }
            }
        }
    },
    "Parameters": {
        "AutoScalingNotificationEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address to notify any scaling operation. When an Autoscaling event occurs, an email is sent to this mail address.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. You only need to select two Availability Zones and the order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux2-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-20.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux2-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances.",
            "Type": "String"
        },
        "BastionInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t3.micro",
            "Description": "Amazon EC2 instance type for the Bastion instances. Bastion hosts are machines placed in the public subnets of each of the Availability Zone which provide secure access to the instances located in the private subnet.",
            "Type": "String"
        },
        "DBAutoMinorVersionUpgrade": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version Upgrades. When enabled, it allows the database engine to be automatically upgraded when a new minor version is available.",
            "Type": "String"
        },
        "DBBackupRetentionPeriod": {
            "ConstraintDescription": "Database backup retention period must be between 1 and 35 days.",
            "Default": "7",
            "Description": "The number of days for which automatic DB snapshots are retained, 7 by default. You can set this parameter to a value between 1 and 35 days. Set this parameter to 0 to disable automated backups.",
            "MaxValue": "35",
            "MinValue": "1",
            "Type": "Number"
        },
        "DBPreferredBackupWindow": {
            "AllowedPattern": "^(|([0-1][0-9]|2[0-3]):[0-5][0-9]-([0-1][0-9]|2[0-3]):[0-5][0-9])$",
            "ConstraintDescription": "Preferred backup window must be left blank or in the form of HH:MM-HH:MM",
            "Default": "",
            "Description": "(Optional) Preferred Backup Window, specified in the format HH:MM-HH:MM using UTC. Automated backups will occur within this time frame. When it's not set, the backup will take place during the default Backup Windows of the AWS region.",
            "Type": "String"
        },
        "DBStorageEncrypted": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "Select true/false to enable storage encryption in the database instances.",
            "Type": "String"
        },
        "DBInstanceClass": {
            "AllowedValues": [
                "db.t2.small",
                "db.t2.medium",
                "db.t3.small",
                "db.t3.medium",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.r4.large",
                "db.r4.xlarge",
                "db.r4.2xlarge",
                "db.r4.4xlarge",
                "db.r4.8xlarge",
                "db.r4.16xlarge",
                "db.r5.large",
                "db.r5.xlarge",
                "db.r5.2xlarge",
                "db.r5.4xlarge",
                "db.r5.8xlarge",
                "db.r5.12xlarge",
                "db.r5.16xlarge",
                "db.r5.24xlarge"
            ],
            "ConstraintDescription": "Must select a valid database instance type.",
            "Default": "db.t3.medium",
            "Description": "Select instance size (compute and memory capacity) for Aurora DB instances. Please check that the selected instance type is available in your region.",
            "Type": "String"
        },
        "DVWAInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t3.micro",
            "Description": "Amazon EC2 instance type for the DVWA instances. Damn Vulnerable Web Application (DVWA) hosts are machines placed in the public subnet which are PHP/MySQL Web App and are vulnerable. This allows security professionals to test Network Security in a legal environment. For more information visit: https://dvwa.co.uk/",
            "Type": "String"
        },
        "DBMasterUserPassword": {
            "AllowedPattern": "(?=\\S)[^@/\"\\r\\n\\t\\f\\s]*",
            "ConstraintDescription": "Min 8 alphanumeric. Cannot contain white space, @, /, \"",
            "Description": "8-41 character, alphanumeric string to be used as the database admin account password (database admin username is 'root').",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": true,
            "Type": "String"
        },
        "DBMultiAZ": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to configure database as a Multi-AZ deployment or not. Multi-AZ deployments create a database node in each of the Availability Zones providing HA.",
            "Type": "String"
        },
        "WordpressAdminPassword": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must contain only alphanumeric characters and must be between 8 and 41 characters long.",
            "Description": "8-41 character, alphanumeric string to be used as the WordPress site admin account password (admin username is 'user').",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": true,
            "Type": "String"
        },
        "KeyPairName": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches. Use 'ec2-user' as SSH username for the connection to the Bastion hosts, then use 'bitnami' as SSH username for the connection to the WordPress instances.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "DVWAKeyPairName": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches. Use 'ubuntu' as SSH username for the connection to the DVWA instance.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet located in Availability Zone 1. All resources located on this subnet are provided an IP within this address block.",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet located in Availability Zone 2. All resources located on this subnet are provided an IP within this address block.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for public (DMZ) subnet located in Availability Zone 1. All resources located on this subnet are provided an IP within this address block.",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for public (DMZ) subnet located in Availability Zone 2. All resources located on this subnet are provided an IP within this address block.",
            "Type": "String"
        },
        "ALBAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Default": "0.0.0.0/0",
            "Description": "Allowed CIDR block for external web access to the Application Load Balancer. It defines the block of IPs that can access the Load Balancer and, consequently, the WordPress site. Set it to 0.0.0.0/0 to make it accessible from anywhere.",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-network-security",
            "Description": "Alphanumeric string which identifies the S3 bucket name for the Quick Start assets. It's the bucket to store the copy of the Quick Start assets if you decided to customize or extend them for your own use.",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/._]*$",
            "ConstraintDescription": "S3 key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "edge-deployment/",
            "Description": "Alphanumeric string which identifies the S3 key prefix used to simulate a folder for your copy of the Quick Start assets if you decided to customize or extend them for your own use.",
            "Type": "String"
        },
        "QSS3BucketRegion":{
            "Default":"us-west-1",
            "Description":"The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.",
            "Type":"String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Default": "127.0.0.1/32",
            "Description": "Allowed CIDR block for external SSH access to the Bastion hosts. It defines the block of IPs that can access, via SSH, the Bastion hosts. Set it to 0.0.0.0/0 to make it accessible from anywhere.",
            "Type": "String"
        },
        "DVWARemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Default": "127.0.0.1/32",
            "Description": "Allowed CIDR block for external SSH access to the DVWA hosts. It defines the block of IPs that can access, via SSH, the DVWA hosts. Set it to 0.0.0.0/0 to make it accessible from anywhere.",
            "Type": "String"
        },
        "DomainName": {
            "Description": "(Optional) Domain name for the web site. It must be an existing, publicly resolvable domain.",
            "Type": "String",
            "Default": "",
            "ConstraintDescription": "Must be a valid domain name."
        },
        "UseSSL": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "Select true/false to configure SSL or not. If you want to configure SSL, you must also specify the ARN of a SSL certificate or a domain name to generate a new certificate.",
            "Type": "String"
        },
        "CertificateArn": {
            "Description": "(Optional) The ARN of the SSL certificate to use for the load balancer. If not specified, the certificate will be auto-generated when 'UseSSL' and 'DomainName' are set.",
            "Type": "String",
            "Default": ""
        },
        "HostedZoneID": {
            "Description": "(Optional) Route 53 Hosted Zone ID of the domain name. When it's left blank Route 53 will not be configured and DNS must be setup manually. When setting an ID, you must also specify a Domain name.",
            "Type": "String",
            "Default": "",
            "MaxLength": "32"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC. All the subnets and resources will have an IP within this address block.",
            "Type": "String"
        },
        "WebServerDesiredCapacity": {
            "Default": "2",
            "Description": "Desired number of WordPress instances. This will set the number of instances when the scaling group is created, then the autoscaler will increase or decrease the current number of instances as the scaling events occur.",
            "Type": "Number"
        },
        "WebServerInstanceType": {
            "AllowedValues": [
                "a1.medium",
                "a1.large",
                "a1.xlarge",
                "a1.2xlarge",
                "a1.4xlarge",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "t3a.micro",
                "t3a.small",
                "t3a.medium",
                "t3a.large",
                "t3a.xlarge",
                "t3a.2xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.8xlarge",
                "m5.12xlarge",
                "m5.16xlarge",
                "m5.24xlarge",
                "m5.metal",
                "m5a.large",
                "m5a.xlarge",
                "m5a.2xlarge",
                "m5a.4xlarge",
                "m5a.8xlarge",
                "m5a.12xlarge",
                "m5a.16xlarge",
                "m5a.24xlarge",
                "m5ad.large",
                "m5ad.xlarge",
                "m5ad.2xlarge",
                "m5ad.4xlarge",
                "m5ad.8xlarge",
                "m5ad.12xlarge",
                "m5ad.16xlarge",
                "m5ad.24xlarge",
                "m5d.large",
                "m5d.xlarge",
                "m5d.2xlarge",
                "m5d.4xlarge",
                "m5d.8xlarge",
                "m5d.12xlarge",
                "m5d.16xlarge",
                "m5d.24xlarge",
                "m5d.metal",
                "m5dn.metal",
                "m5dn.large",
                "m5dn.xlarge",
                "m5dn.2xlarge",
                "m5dn.4xlarge",
                "m5dn.8xlarge",
                "m5dn.12xlarge",
                "m5dn.16xlarge",
                "m5dn.24xlarge",
                "m5n.metal",
                "m5n.large",
                "m5n.xlarge",
                "m5n.2xlarge",
                "m5n.4xlarge",
                "m5n.8xlarge",
                "m5n.12xlarge",
                "m5n.16xlarge",
                "m5n.24xlarge",
                "m5zn.metal",
                "m5zn.large",
                "m5zn.xlarge",
                "m5zn.2xlarge",
                "m5zn.3xlarge",
                "m5zn.6xlarge",
                "m5zn.12xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.12xlarge",
                "c5.18xlarge",
                "c5.24xlarge",
                "c5.metal",
                "c5a.large",
                "c5a.xlarge",
                "c5a.2xlarge",
                "c5a.4xlarge",
                "c5a.8xlarge",
                "c5a.12xlarge",
                "c5a.16xlarge",
                "c5a.24xlarge",
                "c5ad.large",
                "c5ad.xlarge",
                "c5ad.2xlarge",
                "c5ad.4xlarge",
                "c5ad.8xlarge",
                "c5ad.12xlarge",
                "c5ad.16xlarge",
                "c5ad.24xlarge",
                "c5d.large",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
                "c5d.12xlarge",
                "c5d.18xlarge",
                "c5d.24xlarge",
                "c5d.metal",
                "c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
                "c5n.18xlarge",
                "c5n.metal",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.8xlarge",
                "r5.12xlarge",
                "r5.16xlarge",
                "r5.24xlarge",
                "r5.metal",
                "r5a.large",
                "r5a.xlarge",
                "r5a.2xlarge",
                "r5a.4xlarge",
                "r5a.8xlarge",
                "r5a.12xlarge",
                "r5a.16xlarge",
                "r5a.24xlarge",
                "r5ad.large",
                "r5ad.xlarge",
                "r5ad.2xlarge",
                "r5ad.4xlarge",
                "r5ad.8xlarge",
                "r5ad.12xlarge",
                "r5ad.16xlarge",
                "r5ad.24xlarge",
                "r5b.metal",
                "r5b.large",
                "r5b.xlarge",
                "r5b.2xlarge",
                "r5b.4xlarge",
                "r5b.8xlarge",
                "r5b.12xlarge",
                "r5b.16xlarge",
                "r5b.24xlarge",
                "r5d.large",
                "r5d.xlarge",
                "r5d.2xlarge",
                "r5d.4xlarge",
                "r5d.8xlarge",
                "r5d.12xlarge",
                "r5d.16xlarge",
                "r5d.24xlarge",
                "r5d.metal",
                "r5dn.metal",
                "r5dn.large",
                "r5dn.xlarge",
                "r5dn.2xlarge",
                "r5dn.4xlarge",
                "r5dn.8xlarge",
                "r5dn.12xlarge",
                "r5dn.16xlarge",
                "r5dn.24xlarge",
                "r5n.metal",
                "r5n.large",
                "r5n.xlarge",
                "r5n.2xlarge",
                "r5n.4xlarge",
                "r5n.8xlarge",
                "r5n.12xlarge",
                "r5n.16xlarge",
                "r5n.24xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "u-6tb1.56xlarge",
                "u-6tb1.112xlarge",
                "u-9tb1.112xlarge",
                "u-12tb1.112xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.8xlarge",
                "x1e.16xlarge",
                "x1e.32xlarge",
                "z1d.large",
                "z1d.xlarge",
                "z1d.2xlarge",
                "z1d.3xlarge",
                "z1d.6xlarge",
                "z1d.12xlarge",
                "z1d.metal"
            ],
            "ConstraintDescription": "Choose an instance type.",
            "Default": "t3.small",
            "Description": "Select Amazon EC2 instance type for the WordPress instances.",
            "Type": "String"
        },
        "WebServerInstanceMonitoring": {
            "Description": "Set enhanced monitoring for WordPress instances. When enabled, EC2 console displays monitoring graphs with a 1-minute resolution, if not it will be 5-minute resolution.",
            "Type": "String",
            "Default": "Enabled",
            "AllowedValues": [
                "Enabled",
                "Disabled"
            ]
        },
        "WebServerMaxSize": {
            "Default": "12",
            "Description": "Maximum number of WordPress EC2 instances in the Auto Scaling group. It specifies the maximum number of replicas when scaling up.",
            "Type": "Number"
        },
        "WebServerMinSize": {
            "Default": "1",
            "Description": "Minimum number of WordPress EC2 instances in the Auto Scaling group. It specifies the minimum number of replicas when scaling down.",
            "Type": "Number"
        },
        "WebServerAMI": {
            "Default": "",
            "Description": "(Optional) Select AMI to use for the WordPress instances. When it's left blank, the default WordPress AMI for your AWS region will be used. When setting an AMI, it must be available in your current region.",
            "AllowedPattern": "^(ami-([a-zA-Z0-9]{8,})){0,1}$",
            "ConstraintDescription": "Must be a valid AMI.",
            "Type": "String"
        },
        "ElastiCacheEnable": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to create a ElastiCache cluster for Memcached. This technology caches frequently used objects. Using the W3TC plugin, it can be used to reduce the number of queries done to Aurora database, the rendered HTML pages and internal objets, hence improving the WordPress site performance.",
            "Type": "String"
        },
        "ElastiCacheAutoMinorVersionUpgrade":{
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version Upgrades. When enabled, it allows the Memcached engine to be automatically upgraded when a new minor version is available.",
            "Type": "String"
        },
        "ElastiCacheNodeType": {
            "AllowedValues": [
                "cache.t2.micro",
                "cache.t2.small",
                "cache.t2.medium",
                "cache.t3.micro",
                "cache.t3.small",
                "cache.t3.medium",
                "cache.m3.medium",
                "cache.m3.large",
                "cache.m3.xlarge",
                "cache.m3.2xlarge",
                "cache.m4.large",
                "cache.m4.xlarge",
                "cache.m4.2xlarge",
                "cache.m4.4xlarge",
                "cache.m4.10xlarge",
                "cache.m5.large",
                "cache.m5.xlarge",
                "cache.m5.2xlarge",
                "cache.m5.4xlarge",
                "cache.m5.12xlarge",
                "cache.m5.24xlarge",
                "cache.r3.large",
                "cache.r3.xlarge",
                "cache.r3.2xlarge",
                "cache.r3.4xlarge",
                "cache.r3.8xlarge",
                "cache.r4.large",
                "cache.r4.xlarge",
                "cache.r4.2xlarge",
                "cache.r4.4xlarge",
                "cache.r4.8xlarge",
                "cache.r4.16xlarge",
                "cache.r5.large",
                "cache.r5.xlarge",
                "cache.r5.2xlarge",
                "cache.r5.4xlarge",
                "cache.r5.12xlarge",
                "cache.r5.24xlarge"
            ],
            "ConstraintDescription": "Must select a valid ElastiCache node type.",
            "Default": "cache.t3.medium",
            "Description": "Select node type (compute and memory capacity) for nodes in the ElastiCache cluster. Please check that the selected instance type is available in your region.",
            "Type": "String"
        },
        "ElastiCacheNumberOfNodes": {
            "Default": "2",
            "MinValue": "1",
            "MaxValue": "20",
            "Description": "The number of nodes the ElastiCache cluster should have. Increase the number of nodes to guarantee better performance and HA.",
            "Type": "Number"
        }
    },
    "Rules": {
        "CertificateArnOrDomainNameIsPresentIfUseSSL": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Or": [
                            { "Fn::Equals": [ { "Ref" : "UseSSL" }, "false" ] },
                            { "Fn::And": [
                                { "Fn::Equals": [ { "Ref" : "UseSSL" }, "true" ] },
                                { "Fn::Or": [
                                    { "Fn::Not": [ { "Fn::Equals": [ { "Ref" : "CertificateArn" }, "" ] } ] },
                                    { "Fn::Not": [ { "Fn::Equals": [ { "Ref" : "DomainName" }, "" ] } ] }
                                ]}
                            ]}
                        ]
                    },
                    "AssertDescription": "Please specify a 'Certificate ARN' or 'Domain Name' if you specify 'Use SSL'"
                }
            ]
        },
        "DomainNameIsPresentIfHostedZoneIDRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Or": [
                          { "Fn::Equals" : [ { "Ref" : "HostedZoneID" }, "" ] },
                          { "Fn::Not": [ { "Fn::Equals" : [ { "Ref" : "DomainName" }, "" ] } ] } ]
                    },
                    "AssertDescription": "Please specify a 'Domain Name' if you specify 'Route 53 Hosted Zone ID'"
                }
            ]
        },
        "EFSSupportedRegionRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "af-south-1",
                                "ap-northeast-1",
                                "ap-northeast-2",
                                "ap-south-1",
                                "ap-southeast-1",
                                "ap-southeast-2",
                                "ca-central-1",
                                "eu-central-1",
                                "eu-west-1",
                                "eu-west-2",
                                "eu-west-3",
                                "us-east-1",
                                "us-east-2",
                                "us-west-1",
                                "us-west-2"
                            ],
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    },
                    "AssertDescription": "This Quick Start uses Amazon EFS which is only available in the Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Mumbai), Asia Pacific (Singapore), Asia Pacific (Sydney), Canada (Central), EU (Frankfurt), EU (Ireland), EU (London), EU (Paris), US East (N. Virginia), US East (Ohio), US West (Northern California) and US West (Oregon) regions. Please launch the stack in one of these regions"
                }
            ]
        }
    },
    "Conditions": {
        "UsingDefaultBucket":{"Fn::Equals":[{"Ref": "QSS3BucketName"}, "quickstart-network-security"]},
        "AddDNSRecord": {
            "Fn::And": [
                { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "DomainName" }, "" ] } ] },
                { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "HostedZoneID" }, "" ] } ] }
            ]
        },
        "UseSSL": {
            "Fn::Equals": [
                {
                    "Ref": "UseSSL"
                },
                "true"
            ]
        },
        "GenerateSSLCertificate": {
          "Fn::And": [
            { "Fn::Equals": [{ "Ref": "CertificateArn"},""]},
            { "Condition": "UseSSL" },
            { "Fn::Not": [ { "Fn::Equals": [{ "Ref": "DomainName"}, "" ] } ] }
          ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": ["https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml",
                      {
                        "BucketName":{"Fn::If":["UsingDefaultBucket", {"Fn::Sub":"quickstart-network-security"}, {"Ref":"QSS3BucketName"}]},
                        "S3Region":{"Fn::If":["UsingDefaultBucket", {"Ref":"AWS::Region"}, {"Ref":"QSS3BucketRegion"}]}}]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": ["https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template",
                      {
                        "BucketName":{"Fn::If":["UsingDefaultBucket", {"Fn::Sub":"quickstart-network-security"}, {"Ref":"QSS3BucketName"}]},
                        "S3Region":{"Fn::If":["UsingDefaultBucket", {"Ref":"AWS::Region"}, {"Ref":"QSS3BucketRegion"}]}}]
                },
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-linux-bastion/"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "QSS3BucketRegion":{ "Ref": "QSS3BucketRegion"},
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "DVWAStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": ["https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/dvwa.template",
                      {
                        "BucketName":{"Fn::If":["UsingDefaultBucket", {"Fn::Sub":"quickstart-network-security"}, {"Ref":"QSS3BucketName"}]},
                        "S3Region":{"Fn::If":["UsingDefaultBucket", {"Ref":"AWS::Region"}, {"Ref":"QSS3BucketRegion"}]}}]
                },
                "Parameters": {
                    "DVWAInstanceType": {
                        "Ref": "DVWAInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "DVWAKeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "DVWARemoteAccessCIDR": {
                        "Ref": "DVWARemoteAccessCIDR"
                    },
                    "QSS3BucketRegion":{ "Ref": "QSS3BucketRegion"},
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "ConfigureSSLStack": {
            "Condition":"GenerateSSLCertificate",
            "Type":"AWS::CloudFormation::Stack",
            "Properties":{
                "TemplateURL":{
                    "Fn::Sub": ["https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-acm-certificate/quickstart-aws-acm-certificate.template.yaml",
                      {
                        "BucketName":{"Fn::If":["UsingDefaultBucket", {"Fn::Sub":"quickstart-network-security"}, {"Ref":"QSS3BucketName"}]},
                        "S3Region":{"Fn::If":["UsingDefaultBucket", {"Ref":"AWS::Region"}, {"Ref":"QSS3BucketRegion"}]}}]
                },
                "Parameters":{
                  "QSS3BucketName":{
                    "Ref": "QSS3BucketName"
                  },
                  "QSS3BucketRegion":{
                    "Ref":"QSS3BucketRegion"
                  },
                  "QSS3KeyPrefix": {
                    "Ref": "QSS3KeyPrefix"
                  },
                  "DomainName":{
                    "Ref":"DomainName"
                  },
                  "HostedZoneID":{
                    "Ref":"HostedZoneID"
                  }
              }
            }
        },
        "WordPressStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": ["https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/wordpress.template",
                      {
                        "BucketName":{"Fn::If":["UsingDefaultBucket", {"Fn::Sub":"quickstart-network-security"}, {"Ref":"QSS3BucketName"}]},
                        "S3Region":{"Fn::If":["UsingDefaultBucket", {"Ref":"AWS::Region"}, {"Ref":"QSS3BucketRegion"}]}}]
                },
                "Parameters": {
                    "QSS3BucketRegion":{ "Ref": "QSS3BucketRegion"},
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "BastionSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.BastionSecurityGroupID"
                        ]
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "DBInstanceClass": {
                        "Ref": "DBInstanceClass"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DBMultiAZ": {
                        "Ref": "DBMultiAZ"
                    },
                    "DBAutoMinorVersionUpgrade": {
                        "Ref": "DBAutoMinorVersionUpgrade"
                    },
                    "DBBackupRetentionPeriod": {
                        "Ref": "DBBackupRetentionPeriod"
                    },
                    "DBPreferredBackupWindow": {
                        "Ref": "DBPreferredBackupWindow"
                    },
                    "DBStorageEncrypted": {
                        "Ref": "DBStorageEncrypted"
                    },
                    "WebServerInstanceType": {
                        "Ref": "WebServerInstanceType"
                    },
                    "WebServerAMI": {
                        "Ref": "WebServerAMI"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "WebServerInstanceMonitoring": {
                        "Ref": "WebServerInstanceMonitoring"
                    },
                    "WebServerMinSize": {
                        "Ref": "WebServerMinSize"
                    },
                    "WebServerMaxSize": {
                        "Ref": "WebServerMaxSize"
                    },
                    "WebServerDesiredCapacity": {
                        "Ref": "WebServerDesiredCapacity"
                    },
                    "AutoScalingNotificationEmail": {
                        "Ref": "AutoScalingNotificationEmail"
                    },
                    "DomainName": {
                        "Ref": "DomainName"
                    },
                    "CertificateArn": {
                      "Fn::If": [
                          "UseSSL",
                          {
                            "Fn::If": [
                                "GenerateSSLCertificate",
                                {
                                  "Fn::GetAtt": [
                                      "ConfigureSSLStack",
                                      "Outputs.ACMCertificate"
                                  ]
                                },
                                {
                                  "Ref": "CertificateArn"
                                }
                            ]
                          },
                          {
                              "Ref": "AWS::NoValue"
                          }
                      ]
                    },
                    "HostedZoneID": {
                        "Ref": "HostedZoneID"
                    },
                    "WordpressAdminPassword": {
                        "Ref": "WordpressAdminPassword"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "ALBAccessCIDR": {
                        "Ref": "ALBAccessCIDR"
                    },
                    "ElastiCacheEnable": {
                        "Ref": "ElastiCacheEnable"
                    },
                    "ElastiCacheAutoMinorVersionUpgrade":{
                        "Ref": "ElastiCacheAutoMinorVersionUpgrade"
                    },
                    "ElastiCacheNodeType":{
                        "Ref": "ElastiCacheNodeType"
                    },
                    "ElastiCacheNumberOfNodes":{
                        "Ref": "ElastiCacheNumberOfNodes"
                    }
                }
            }
        }
    },
    "Outputs": {
        "APPURL": {
            "Condition": "AddDNSRecord",
            "Description": "The URL to access the web application",
            "Value": { "Fn::GetAtt": [ "WordPressStack", "Outputs.APPURL" ] }
        },
        "ELBURL": {
            "Description": "The URL of the ELB. Point your domain to it by using a CNAME/ALIAS DNS record",
            "Value": { "Fn::GetAtt": [ "WordPressStack", "Outputs.ELBURL" ] }
        }
    }
}
