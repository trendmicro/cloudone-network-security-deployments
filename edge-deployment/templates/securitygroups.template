{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "WordPress Security Groups template. (qs-1ot302h6s)",
    "Parameters": {
        "VPC": {
            "Description": "VPC-ID of your existing Virtual Private Cloud (VPC) where you want to depoy RDS",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "The CIDR block for VPC",
            "Type": "String"
        },
        "ALBAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external web access to the Application Load Balancer",
            "Type": "String"
        },
        "BastionSecurityGroupID": {
            "Description": "ID of the Bastion Security Group (e.g., sg-1d2c3b4a)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "ElastiCacheEnable":{
            "Description": "Enable ElastiCache",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Type": "String"
        }
    },
    "Conditions":{
        "ElastiCacheEnableCondition":{
            "Fn::Equals": [
                {
                    "Ref": "ElastiCacheEnable"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "AuroraRDSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow access to Aurora Port (AWS Quick Start)",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306,
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "WebServerSecurityGroup",
                                "GroupId"
                            ]
                        }
                    }
                ]
            }
        },
        "ALBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "ELB Security Group (AWS Quick Start)",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": { "Ref": "ALBAccessCIDR" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": { "Ref": "ALBAccessCIDR" }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "App Server Security Group (AWS Quick Start)",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "SourceSecurityGroupId": {
                            "Ref": "BastionSecurityGroupID"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "ALBSecurityGroup",
                                "GroupId"
                            ]
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "ALBSecurityGroup",
                                "GroupId"
                            ]
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "EFSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "EFS Security Group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2049,
                        "ToPort": 2049,
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    }
                ]
            }
        },
        "ElastiCacheSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "ElastiCacheEnableCondition",
            "Properties": {
                "GroupDescription": "Allow access to ElastiCache-Memcached Port (AWS Quick Start)",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 11211,
                        "ToPort": 11211,
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "WebServerSecurityGroup",
                                "GroupId"
                            ]
                        }
                    }
                ]
            }
        },
        "SecurityGroupRuleElastiCache": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Condition": "ElastiCacheEnableCondition",
            "Properties": {
                "IpProtocol": "tcp",
                "FromPort": 11211,
                "ToPort": 11211,
                "DestinationSecurityGroupId": {
                    "Fn::GetAtt": [
                        "ElastiCacheSecurityGroup",
                        "GroupId"
                    ]
                },
                "GroupId": {
                    "Fn::GetAtt": [
                        "WebServerSecurityGroup",
                        "GroupId"
                    ]
                }
            }
        },
        "SecurityGroupRuleAppDB": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "IpProtocol": "tcp",
                "FromPort": 3306,
                "ToPort": 3306,
                "DestinationSecurityGroupId": {
                    "Fn::GetAtt": [
                        "AuroraRDSSecurityGroup",
                        "GroupId"
                    ]
                },
                "GroupId": {
                    "Fn::GetAtt": [
                        "WebServerSecurityGroup",
                        "GroupId"
                    ]
                }
            }
        },
        "SecurityGroupRuleAppEFS": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "IpProtocol": "tcp",
                "FromPort": 2049,
                "ToPort": 2049,
                "DestinationSecurityGroupId": {
                    "Fn::GetAtt": [
                        "EFSSecurityGroup",
                        "GroupId"
                    ]
                },
                "GroupId": {
                    "Fn::GetAtt": [
                        "WebServerSecurityGroup",
                        "GroupId"
                    ]
                }
            }
        }
    },
    "Outputs": {
        "AuroraRDSSecurityGroup": {
            "Description": "Aurora Security Group",
            "Value": {
                "Ref": "AuroraRDSSecurityGroup"
            }
        },
        "ALBSecurityGroup": {
            "Description": "ELB Security Group",
            "Value": {
                "Ref": "ALBSecurityGroup"
            }
        },
        "WebServerSecurityGroup": {
            "Description": "Web Server Security Group",
            "Value": {
                "Ref": "WebServerSecurityGroup"
            }
        },
        "EFSSecurityGroup": {
            "Description": "EFS Security Group",
            "Value": {
                "Ref": "EFSSecurityGroup"
            }
        },
        "ElastiCacheSecurityGroup": {
            "Description": "ElastiCache Security Group",
            "Value": {
                "Fn::If":[
                    "ElastiCacheEnableCondition",
                    {"Ref": "ElastiCacheSecurityGroup"},
                    ""
                ]
            }
        }
    }
}
