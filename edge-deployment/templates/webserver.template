{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "WordPress Webserver Template. (qs-1ot302h72)",
    "Metadata": {
        "AWSAMIRegionMap": {
            "Filters": {
                "BITNAMIWP": {
                    "name": "bitnami-wordpress-*-linux-debian-10-x86_64-hvm-ebs-high-availability-nami",
                    "owner-id": "979382823631"
                }
            }
        },
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "WebServerSubnets",
                        "ALBSecurityGroup",
                        "WebServerSecurityGroup",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "VPCID",
                        "EFSSecurityGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "ElastiCache Configuration"
                    },
                    "Parameters": [
                        "ElastiCacheEndpointAddress"
                    ]
                },
                {
                    "Label": {
                        "default": "Database Configuration"
                    },
                    "Parameters": [
                        "DBEndpointAddress",
                        "DBMasterUserPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "DNS and SSL Configuration"
                    },
                    "Parameters": [
                        "DomainName",
                        "CertificateArn",
                        "HostedZoneID"
                    ]
                },
                {
                    "Label": {
                        "default": "WordPress Webserver Configuration"
                    },
                    "Parameters": [
                        "WordpressAdminPassword",
                        "WebServerInstanceType",
                        "WebServerAMI",
                        "WebServerInstanceMonitoring",
                        "AutoScalingNotificationEmail",
                        "WebServerMinSize",
                        "WebServerMaxSize",
                        "WebServerDesiredCapacity",
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-network-security",
            "Description": "Alphanumeric string which identifies the S3 bucket name for the Quick Start assets. It's the bucket to store the copy of the Quick Start assets if you decided to customize or extend them for your own use.",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/._]*$",
            "ConstraintDescription": "S3 key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Description": "Alphanumeric string which identifies the S3 key prefix used to simulate a folder for your copy of the Quick Start assets if you decided to customize or extend them for your own use.",
            "Default": "edge-deployment/",
            "Type": "String"
        },
        "AutoScalingNotificationEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address to notify any scaling operation. When an Autoscaling event occurs, an email is sent to this mail address.",
            "Type": "String"
        },
        "WebServerSubnets": {
            "ConstraintDescription": "Must be list of existing subnet Ids",
            "Default": "",
            "Description": "A list of subnet identifiers of Amazon VPCs where the WebServer Autoscaling would be launched",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "EFSSecurityGroup": {
            "Description": "EFS Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "WebServerInstanceType": {
            "AllowedValues": [
                "a1.medium",
                "a1.large",
                "a1.xlarge",
                "a1.2xlarge",
                "a1.4xlarge",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "t3a.micro",
                "t3a.small",
                "t3a.medium",
                "t3a.large",
                "t3a.xlarge",
                "t3a.2xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.8xlarge",
                "m5.12xlarge",
                "m5.16xlarge",
                "m5.24xlarge",
                "m5.metal",
                "m5a.large",
                "m5a.xlarge",
                "m5a.2xlarge",
                "m5a.4xlarge",
                "m5a.8xlarge",
                "m5a.12xlarge",
                "m5a.16xlarge",
                "m5a.24xlarge",
                "m5ad.large",
                "m5ad.xlarge",
                "m5ad.2xlarge",
                "m5ad.4xlarge",
                "m5ad.8xlarge",
                "m5ad.12xlarge",
                "m5ad.16xlarge",
                "m5ad.24xlarge",
                "m5d.large",
                "m5d.xlarge",
                "m5d.2xlarge",
                "m5d.4xlarge",
                "m5d.8xlarge",
                "m5d.12xlarge",
                "m5d.16xlarge",
                "m5d.24xlarge",
                "m5d.metal",
                "m5dn.metal",
                "m5dn.large",
                "m5dn.xlarge",
                "m5dn.2xlarge",
                "m5dn.4xlarge",
                "m5dn.8xlarge",
                "m5dn.12xlarge",
                "m5dn.16xlarge",
                "m5dn.24xlarge",
                "m5n.metal",
                "m5n.large",
                "m5n.xlarge",
                "m5n.2xlarge",
                "m5n.4xlarge",
                "m5n.8xlarge",
                "m5n.12xlarge",
                "m5n.16xlarge",
                "m5n.24xlarge",
                "m5zn.metal",
                "m5zn.large",
                "m5zn.xlarge",
                "m5zn.2xlarge",
                "m5zn.3xlarge",
                "m5zn.6xlarge",
                "m5zn.12xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.12xlarge",
                "c5.18xlarge",
                "c5.24xlarge",
                "c5.metal",
                "c5a.large",
                "c5a.xlarge",
                "c5a.2xlarge",
                "c5a.4xlarge",
                "c5a.8xlarge",
                "c5a.12xlarge",
                "c5a.16xlarge",
                "c5a.24xlarge",
                "c5ad.large",
                "c5ad.xlarge",
                "c5ad.2xlarge",
                "c5ad.4xlarge",
                "c5ad.8xlarge",
                "c5ad.12xlarge",
                "c5ad.16xlarge",
                "c5ad.24xlarge",
                "c5d.large",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
                "c5d.12xlarge",
                "c5d.18xlarge",
                "c5d.24xlarge",
                "c5d.metal",
                "c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
                "c5n.18xlarge",
                "c5n.metal",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.8xlarge",
                "r5.12xlarge",
                "r5.16xlarge",
                "r5.24xlarge",
                "r5.metal",
                "r5a.large",
                "r5a.xlarge",
                "r5a.2xlarge",
                "r5a.4xlarge",
                "r5a.8xlarge",
                "r5a.12xlarge",
                "r5a.16xlarge",
                "r5a.24xlarge",
                "r5ad.large",
                "r5ad.xlarge",
                "r5ad.2xlarge",
                "r5ad.4xlarge",
                "r5ad.8xlarge",
                "r5ad.12xlarge",
                "r5ad.16xlarge",
                "r5ad.24xlarge",
                "r5b.metal",
                "r5b.large",
                "r5b.xlarge",
                "r5b.2xlarge",
                "r5b.4xlarge",
                "r5b.8xlarge",
                "r5b.12xlarge",
                "r5b.16xlarge",
                "r5b.24xlarge",
                "r5d.large",
                "r5d.xlarge",
                "r5d.2xlarge",
                "r5d.4xlarge",
                "r5d.8xlarge",
                "r5d.12xlarge",
                "r5d.16xlarge",
                "r5d.24xlarge",
                "r5d.metal",
                "r5dn.metal",
                "r5dn.large",
                "r5dn.xlarge",
                "r5dn.2xlarge",
                "r5dn.4xlarge",
                "r5dn.8xlarge",
                "r5dn.12xlarge",
                "r5dn.16xlarge",
                "r5dn.24xlarge",
                "r5n.metal",
                "r5n.large",
                "r5n.xlarge",
                "r5n.2xlarge",
                "r5n.4xlarge",
                "r5n.8xlarge",
                "r5n.12xlarge",
                "r5n.16xlarge",
                "r5n.24xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "u-6tb1.56xlarge",
                "u-6tb1.112xlarge",
                "u-9tb1.112xlarge",
                "u-12tb1.112xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.8xlarge",
                "x1e.16xlarge",
                "x1e.32xlarge",
                "z1d.large",
                "z1d.xlarge",
                "z1d.2xlarge",
                "z1d.3xlarge",
                "z1d.6xlarge",
                "z1d.12xlarge",
                "z1d.metal"
            ],
            "ConstraintDescription": "Choose an instance type.",
            "Default": "t3.small",
            "Description": "Select Amazon EC2 instance type for the WordPress instances.",
            "Type": "String"
        },
        "WebServerInstanceMonitoring": {
            "Description": "Set enhanced monitoring for WordPress instances. When enabled, EC2 console displays monitoring graphs with a 1-minute resolution, if not it will be 5-minute resolution.",
            "Type": "String",
            "Default": "Enabled",
            "AllowedValues": [
                "Enabled",
                "Disabled"
            ]
        },
        "WebServerSecurityGroup": {
            "Description": "Web Server Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "KeyPairName": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Default": "id_rsa_aws",
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches. Use 'ec2-user' as SSH username for the connection to the Bastion hosts, then use 'bitnami' as SSH username for the connection to the WordPress instances.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ElastiCacheEndpointAddress": {
            "Description": "ElastiCache Endpoint",
            "Type": "String"
        },
        "DBEndpointAddress": {
            "Description": "Aurora DB Endpoint",
            "Type": "String"
        },
        "DBMasterUserPassword": {
            "AllowedPattern": "(?=\\S)[^@/\"\\r\\n\\t\\f\\s]*",
            "ConstraintDescription": "Min 8 chars. Cannot contain white space, @, /, \"",
            "Description": "8-41 character, alphanumeric string to be used as the database admin account password (database admin username is 'root').",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "WordpressAdminPassword": {
            "Description": "8-41 character, alphanumeric string to be used as the WordPress site admin account password (admin username is 'user').",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must contain only alphanumeric characters and must be between 8 and 41 characters long.",
            "NoEcho": "true"
        },
        "WebServerMinSize": {
            "Default": "2",
            "Description": "Minimum number of WordPress EC2 instances in the Auto Scaling group. It specifies the minimum number of replicas when scaling down.",
            "Type": "Number"
        },
        "WebServerMaxSize": {
            "Default": "12",
            "Description": "Maximum number of WordPress EC2 instances in the Auto Scaling group. It specifies the maximum number of replicas when scaling up.",
            "Type": "Number"
        },
        "WebServerDesiredCapacity": {
            "Default": "2",
            "Description": "Desired number of WordPress instances. This will set the number of instances when the scaling group is created, then the autoscaler will increase or decrease the current number of instances as the scaling events occur.",
            "Type": "Number"
        },
        "VPCID": {
            "Description": "The ID of your existing VPC (e.g. vpc-123456789)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "PublicSubnet1ID": {
            "Description": "The ID of the public (DMZ) subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a12345aa1).",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "The ID of the public (DMZ) subnet in Availability Zone 2 in your existing VPC (e.g., subnet-a12345aa2).",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "ALBSecurityGroup": {
            "Description": "ALB Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "DomainName": {
            "Description": "(Optional) Domain name for the web site. It must be an existing, publicly resolvable domain.",
            "Type": "String",
            "Default": "",
            "ConstraintDescription": "Must be a valid domain name."
        },
        "CertificateArn": {
            "Description": "(Optional) The ARN of the SSL certificate to use for the load balancer.",
            "Type": "String",
            "Default": ""
        },
        "HostedZoneID": {
            "Description": "(Optional) Route 53 Hosted Zone ID of the domain name. If left blank route 53 will not be configured and DNS must be setup manually. If you specify this, you must also specify a Domain name",
            "Type": "String",
            "Default": "",
            "MaxLength": "32"
        },
        "WebServerAMI": {
            "Default": "",
            "Description": "(Optional) Select AMI to use for the WordPress instances. When it's left blank, the default WordPress AMI for your AWS region will be used. When setting an AMI, it must be available in your current region.",
            "AllowedPattern": "^(ami-([a-zA-Z0-9]{8,})){0,1}$",
            "ConstraintDescription": "Must be a valid AMI.",
            "Type": "String"
        },
        "ElastiCacheEnable": {
            "Description": "Select true/false to create a ElastiCache cluster for Memcached. This technology caches frequently used objects. Using the W3TC plugin, it can be used to reduce the number of queries done to Aurora database, the rendered HTML pages and internal objets, hence improving the WordPress site performance.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Type": "String"
        },
        "ElastiCacheClusterId": {
            "Description": "ElastiCache Cluster Id.",
            "Type": "String",
            "Default": ""
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "af-south-1": {
                "BITNAMIWP": "ami-018dfc22ff1eb3d88"
            },
            "ap-northeast-1": {
                "BITNAMIWP": "ami-06408bdb771dc143b"
            },
            "ap-northeast-2": {
                "BITNAMIWP": "ami-048da5e1d09c2d635"
            },
            "ap-south-1": {
                "BITNAMIWP": "ami-0dd778181f3883554"
            },
            "ap-southeast-1": {
                "BITNAMIWP": "ami-0ea1bd5045db7b768"
            },
            "ap-southeast-2": {
                "BITNAMIWP": "ami-0d985970e576a0d1c"
            },
            "ca-central-1": {
                "BITNAMIWP": "ami-043dbe8cb21b869c2"
            },
            "eu-central-1": {
                "BITNAMIWP": "ami-0b19978e14a8bf573"
            },
            "eu-west-1": {
                "BITNAMIWP": "ami-0aea38cc9a70171a9"
            },
            "eu-west-2": {
                "BITNAMIWP": "ami-017e333321c9cf6c2"
            },
            "eu-west-3": {
                "BITNAMIWP": "ami-0c53b50c9b335aea7"
            },
            "us-east-1": {
                "BITNAMIWP": "ami-0860a09be6c870294"
            },
            "us-east-2": {
                "BITNAMIWP": "ami-0c6aafd2e5665ff23"
            },
            "us-west-1": {
                "BITNAMIWP": "ami-08eed1ce64b94840c"
            },
            "us-west-2": {
                "BITNAMIWP": "ami-0a253a5cbbce27b00"
            }
        }
    },
    "Rules": {
        "ElastiCacheRule": {
            "RuleCondition": {
                "Fn::Equals": [
                    {
                        "Ref": "ElastiCacheEnable"
                    },
                    "true"
                ]
            },
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Equals": [
                                    {
                                        "Ref": "ElastiCacheClusterId"
                                    },
                                    ""
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "ElastiCacheClusterId cannot be empty when ElastiCacheEnable is true."
                }
            ]
        }
    },
    "Conditions": {
        "UseSSL": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "CertificateArn"
                        },
                        ""
                    ]
                }
            ]
        },
        "UseCustomAMI": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "WebServerAMI"
                        },
                        ""
                    ]
                }
            ]
        },
        "AddDNSRecord": {
            "Fn::And": [
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "DomainName"
                                },
                                ""
                            ]
                        }
                    ]
                },
                {
                    "Fn::Not": [
                        {
                            "Fn::Equals": [
                                {
                                    "Ref": "HostedZoneID"
                                },
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        "ElastiCacheEnableCondition": {
            "Fn::Equals": [
                {
                    "Ref": "ElastiCacheEnable"
                },
                "true"
            ]
        },
        "EnableInstanceMonitoring": {
            "Fn::Equals": [
                {
                    "Ref": "WebServerInstanceMonitoring"
                },
                "Enabled"
            ]
        }
    },
    "Resources": {
        "WordpressEFS": {
            "Type": "AWS::EFS::FileSystem",
            "Properties": {
                "PerformanceMode": "generalPurpose",
                "Encrypted": true,
                "FileSystemTags": [
                    {
                        "Key": "Name",
                        "Value": "WordPress EFS Shared Filesystem"
                    }
                ]
            }
        },
        "WordpressEFSMountTarget1": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {
                    "Ref": "WordpressEFS"
                },
                "SubnetId": {
                    "Fn::Select": [
                        "0",
                        {
                            "Ref": "WebServerSubnets"
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "EFSSecurityGroup"
                    }
                ]
            }
        },
        "WordpressEFSMountTarget2": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {
                    "Ref": "WordpressEFS"
                },
                "SubnetId": {
                    "Fn::Select": [
                        "1",
                        {
                            "Ref": "WebServerSubnets"
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "EFSSecurityGroup"
                    }
                ]
            }
        },
        "WebServerInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                }
            }
        },
        "WebServerInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "WebServerInstanceRole"
                    }
                ]
            }
        },
        "DescribeElastiCachePolicy": {
            "Type": "AWS::IAM::Policy",
            "Condition": "ElastiCacheEnableCondition",
            "Properties": {
                "PolicyName": "DescribeElastiCacheClusterPolicy",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                    "elasticache:DescribeCacheClusters",
                                    "elasticache:DescribeCacheEngineVersions",
                                    "elasticache:DescribeCacheParameterGroups",
                                    "elasticache:DescribeCacheParameters",
                                    "elasticache:DescribeCacheSecurityGroups",
                                    "elasticache:DescribeCacheSubnetGroups",
                                    "elasticache:DescribeEngineDefaultParameters",
                                    "elasticache:DescribeEvents",
                                    "elasticache:DescribeGlobalReplicationGroups",
                                    "elasticache:DescribeReplicationGroups",
                                    "elasticache:DescribeReservedCacheNodes",
                                    "elasticache:DescribeReservedCacheNodesOfferings",
                                    "elasticache:DescribeServiceUpdates",
                                    "elasticache:DescribeSnapshots",
                                    "elasticache:DescribeUpdateActions",
                                    "elasticache:DescribeUserGroups",
                                    "elasticache:DescribeUsers",
                                    "elasticache:ListAllowedNodeTypeModifications",
                                    "elasticache:ListTagsForResource"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "WebServerInstanceRole"
                    }
                ]
            }
        },
        "ApplicationLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Subnets": [
                    {
                        "Ref": "PublicSubnet1ID"
                    },
                    {
                        "Ref": "PublicSubnet2ID"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Ref": "ALBSecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WordpressALB"
                    }
                ]
            }
        },
        "ALBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "HealthCheckPort": "80",
                "HealthCheckProtocol": "HTTP",
                "Port": 80,
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 5,
                "VpcId": {
                    "Ref": "VPCID"
                },
                "TargetGroupAttributes": [
                    {
                        "Key": "stickiness.enabled",
                        "Value": "true"
                    },
                    {
                        "Key": "stickiness.type",
                        "Value": "lb_cookie"
                    },
                    {
                        "Key": "stickiness.lb_cookie.duration_seconds",
                        "Value": "30"
                    }
                ]
            }
        },
        "ALBListenerHTTP": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Fn::If": [
                            "UseSSL",
                            {
                                "Type": "redirect",
                                "RedirectConfig": {
                                    "Host": "#{host}",
                                    "Path": "/#{path}",
                                    "Port": "443",
                                    "Protocol": "HTTPS",
                                    "StatusCode": "HTTP_301"
                                }
                            },
                            {
                                "Type": "forward",
                                "TargetGroupArn": {
                                    "Ref": "ALBTargetGroup"
                                }
                            }
                        ]
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationLoadBalancer"
                },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "ALBListenerHTTPS": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Condition": "UseSSL",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationLoadBalancer"
                },
                "Port": 443,
                "Protocol": "HTTPS",
                "Certificates": [
                    {
                        "CertificateArn": {
                            "Ref": "CertificateArn"
                        }
                    }
                ]
            }
        },
        "Route53RecordSet": {
            "Condition": "AddDNSRecord",
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "Type": "A",
                "Name": {
                    "Ref": "DomainName"
                },
                "AliasTarget": {
                    "HostedZoneId": {
                        "Fn::GetAtt": [
                            "ApplicationLoadBalancer",
                            "CanonicalHostedZoneID"
                        ]
                    },
                    "DNSName": {
                        "Fn::GetAtt": [
                            "ApplicationLoadBalancer",
                            "DNSName"
                        ]
                    }
                },
                "HostedZoneId": {
                    "Ref": "HostedZoneID"
                }
            }
        },
        "WebServerASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "WebServerLC"
                },
                "MinSize": {
                    "Ref": "WebServerMinSize"
                },
                "MaxSize": {
                    "Ref": "WebServerMaxSize"
                },
                "DesiredCapacity": {
                    "Ref": "WebServerDesiredCapacity"
                },
                "TargetGroupARNs": [
                    {
                        "Ref": "ALBTargetGroup"
                    }
                ],
                "VPCZoneIdentifier": {
                    "Ref": "WebServerSubnets"
                },
                "NotificationConfigurations": [{
                    "TopicARN": {
                        "Ref": "NotificationTopic"
                    },
                    "NotificationTypes": [
                        "autoscaling:EC2_INSTANCE_LAUNCH",
                        "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                        "autoscaling:EC2_INSTANCE_TERMINATE",
                        "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
                    ]
                }],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Web Server"
                        },
                        "PropagateAtLaunch": true
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "WebServerDesiredCapacity"
                    },
                    "Timeout": "PT15M"
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": 1,
                    "PauseTime": "PT15M",
                    "SuspendProcesses": [
                        "HealthCheck",
                        "ReplaceUnhealthy",
                        "AZRebalance",
                        "AlarmNotification",
                        "ScheduledActions"
                    ],
                    "WaitOnResourceSignals": true
                }
            }
        },
        "WebServerLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "DependsOn": [
                "WordpressEFSMountTarget1",
                "WordpressEFSMountTarget2",
                "ApplicationLoadBalancer"
            ],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/opt/bitnami/var/cfn-user-data": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "\n# PROVISIONER_PEER_PASSWORD=",
                                            {
                                                "Ref": "DBMasterUserPassword"
                                            },
                                            "\n# PROVISIONER_APP_PASSWORD=",
                                            {
                                                "Ref": "WordpressAdminPassword"
                                            }
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::If": [
                        "UseCustomAMI",
                        {
                            "Ref": "WebServerAMI"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSAMIRegionMap",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "BITNAMIWP"
                            ]
                        }
                    ]
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "\n# PROVISIONER_CFN_INIT_ENABLED=true",
                                "\n# PROVISIONER_CFN_INIT_RESOURCE=WebServerLC",
                                "\n# PROVISIONER_CFN_INIT_FILE_PATH=/opt/bitnami/var/cfn-user-data",
                                "\n# PROVISIONER_CFN_RESOURCE=WebServerASG",
                                "\n# PROVISIONER_CFN_STACK=",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n# PROVISIONER_CFN_REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n# PROVISIONER_PEER_PASSWORD_INPUT=",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                " ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n# PROVISIONER_SHARED_UNIQUE_ID_INPUT=",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                " ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n# PROVISIONER_EFS_URI=",
                                {
                                    "Fn::Sub": "${WordpressEFS}.efs.${AWS::Region}.amazonaws.com:/"
                                },
                                "\n# PROVISIONER_PUBLIC_URL=",
                                {
                                    "Fn::If": [
                                        "UseSSL",
                                        "https://",
                                        "http://"
                                    ]
                                },
                                {
                                    "Fn::If": [
                                        "AddDNSRecord",
                                        {
                                            "Ref": "DomainName"
                                        },
                                        {
                                            "Fn::GetAtt": [
                                                "ApplicationLoadBalancer",
                                                "DNSName"
                                            ]
                                        }
                                    ]
                                },
                                "\n# PROVISIONER_TIER=frontend_ha",
                                "\n# PROVISIONER_ELASTICACHE_ADDRESS=",
                                {
                                    "Ref": "ElastiCacheEndpointAddress"
                                },
                                "\n# PROVISIONER_PEER_ADDRESS=",
                                {
                                    "Ref": "DBEndpointAddress"
                                }
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "WebServerInstanceType"
                },
                "InstanceMonitoring": {
                    "Fn::If": [
                        "EnableInstanceMonitoring",
                        true,
                        false
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                }
            }
        },
        "NotificationTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Ref": "AutoScalingNotificationEmail"
                        },
                        "Protocol": "email"
                    }
                ],
                "TopicName": {
                    "Fn::Sub": "${AWS::StackName}-WordpressSnsTopic"
                }
            }
        },
        "WebServerTargetTrackingScalingPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "WebServerASG"
                },
                "Cooldown": "60",
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ASGAverageCPUUtilization"
                    },
                    "TargetValue": 75.0
                }
            }
        }
    },
    "Outputs": {
        "APPURL": {
            "Condition": "AddDNSRecord",
            "Description": "The URL to access the web application",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::If": [
                                "UseSSL",
                                "https://",
                                "http://"
                            ]
                        },
                        {
                            "Ref": "DomainName"
                        }
                    ]
                ]
            }
        },
        "ELBURL": {
            "Description": "The URL of the ELB. Point your domain to it by using a CNAME/ALIAS DNS record",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::If": [
                                "UseSSL",
                                "https://",
                                "http://"
                            ]
                        },
                        {
                            "Fn::GetAtt": [
                                "ApplicationLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    }
}
